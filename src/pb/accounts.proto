syntax = 'proto3';

// Params


message Empty {

}

message PrivateAccount {
	bytes PrivateKey = 1;
}

message AddressParam {
	bytes address = 1;
}

message PrivateKeyParam {
	bytes privateKey = 1;
}

message StorageAtParam {
	bytes address = 1;
	bytes key = 2;
}

// Results

message BasePermissions {
	uint64 Perms = 1;
	uint64 SetBit = 2;
}

message AccountPermissions {
	BasePermissions Base  = 1;
	repeated string Roles = 2;
}

message Account {
	bytes Address 	= 1;
	bytes PublicKey = 2;
	uint64 Sequence = 3;
	uint64 Balance 	= 4;
	bytes Code 		= 5;
	bytes StorageRoot = 6;
	AccountPermissions Permissions = 7;
}

message AccountList {
	uint64 BlockHeight = 1;
	repeated Account Accounts = 2;
}

message Validator {
	bytes   Address   = 1;
	bytes   PublicKey = 2;
	uint64  Power     = 3;
}

message ValidatorList {
	uint64 BlockHeight  = 1;
	repeated Validator BondedValidators = 2;
	repeated Validator UnbondingValidators = 3;
}

message StorageItem {
	bytes Key = 1;
	bytes Value = 2;
}

message StorageDump {
	bytes StorageRoot = 1;
	repeated StorageItem StorageItems = 2;
}

message FilterListParam {
	repeated FilterData filters = 1;
}

message FilterData {
	string field = 1;
	string op = 2;
	string value = 3;
}


// #BEGIN(account)
// Account Service definition
service Accounts {
	rpc GenPrivAccount(Empty) returns (PrivateAccount);
	rpc GenPrivAccountFromKey(PrivateKeyParam) returns (PrivateAccount);
	rpc GetAccount(AddressParam) returns (Account);
	rpc GetAccounts(FilterListParam) returns (AccountList);
	rpc GetValidators(Empty) returns (ValidatorList);
	rpc GetStorage(AddressParam) returns (StorageDump);
	rpc GetStorageAt(StorageAtParam) returns (StorageItem);
}