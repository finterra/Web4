syntax = 'proto3';

package network;

// #BEGIN(network)
// Network Service Definition
service Network {
	rpc GetClientVersion(Empty) returns (ClientVersion); 	// NI - go
	rpc GetNetworkInfo(Empty) returns (NetworkInfo);
	rpc GetNodeInfo(Empty) returns (NodeInfo);  			// NI - go
	rpc GetPeer(PeerParam) returns (Peer);					// NI - go
	rpc GetPeers(Empty) returns (PeerList);
}

// Params

message Empty {
	
}

message PeerParam {
	bytes address = 1;
}

// Results
message ClientVersion {
	string version = 1;
}

message NodeID {
	string Name = 1;
	bytes  PublicKey = 2;
}

message NodeInfo {
	NodeID ID  			= 1;
	string ListenAddr  	= 2;
	string Network  	= 3;
	string Version 		= 4; 
	bytes  Channels  	= 5;
	string Moniker 		= 6;
	repeated string Other = 7;
}

message NetworkInfo {
	bool Listening = 1;
	repeated string Listeners = 2;
	repeated Peer Peers = 3;
}

message Peer {
	NodeInfo NodeInfo   = 1;
	bool     IsOutbound = 2;
}

message PeerList {
	repeated Peer Peers = 1;
}
